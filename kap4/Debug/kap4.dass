
./Debug/kap4.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8d6 	bl	200001b4 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init( void ){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	//GPIO_MODER
	*( (unsigned long *) 0x40020C00) = 0x55005555;
20000014:	4b0e      	ldr	r3, [pc, #56]	; (20000050 <app_init+0x40>)
20000016:	4a0f      	ldr	r2, [pc, #60]	; (20000054 <app_init+0x44>)
20000018:	601a      	str	r2, [r3, #0]
	//GPIO_OTYPER
	*( (unsigned long *) 0x40020C04) &= 0xFFFF0FFF;
2000001a:	4b0f      	ldr	r3, [pc, #60]	; (20000058 <app_init+0x48>)
2000001c:	681a      	ldr	r2, [r3, #0]
2000001e:	4b0e      	ldr	r3, [pc, #56]	; (20000058 <app_init+0x48>)
20000020:	490e      	ldr	r1, [pc, #56]	; (2000005c <app_init+0x4c>)
20000022:	400a      	ands	r2, r1
20000024:	601a      	str	r2, [r3, #0]
	*( (unsigned long *) 0x40020C04) |= 0x00000000;
20000026:	4a0c      	ldr	r2, [pc, #48]	; (20000058 <app_init+0x48>)
20000028:	4b0b      	ldr	r3, [pc, #44]	; (20000058 <app_init+0x48>)
2000002a:	6812      	ldr	r2, [r2, #0]
2000002c:	601a      	str	r2, [r3, #0]
	//GPIO_PUPDR
	*( (unsigned long *) 0x40020C0C) &= 0xFF00FFFF;
2000002e:	4b0c      	ldr	r3, [pc, #48]	; (20000060 <app_init+0x50>)
20000030:	681a      	ldr	r2, [r3, #0]
20000032:	4b0b      	ldr	r3, [pc, #44]	; (20000060 <app_init+0x50>)
20000034:	490b      	ldr	r1, [pc, #44]	; (20000064 <app_init+0x54>)
20000036:	400a      	ands	r2, r1
20000038:	601a      	str	r2, [r3, #0]
	*( (unsigned long *) 0x40020C0C) |= 0x00550000;
2000003a:	4b09      	ldr	r3, [pc, #36]	; (20000060 <app_init+0x50>)
2000003c:	681a      	ldr	r2, [r3, #0]
2000003e:	4b08      	ldr	r3, [pc, #32]	; (20000060 <app_init+0x50>)
20000040:	21aa      	movs	r1, #170	; 0xaa
20000042:	03c9      	lsls	r1, r1, #15
20000044:	430a      	orrs	r2, r1
20000046:	601a      	str	r2, [r3, #0]
}
20000048:	46c0      	nop			; (mov r8, r8)
2000004a:	46bd      	mov	sp, r7
2000004c:	bd80      	pop	{r7, pc}
2000004e:	46c0      	nop			; (mov r8, r8)
20000050:	40020c00 	andmi	r0, r2, r0, lsl #24
20000054:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000058:	40020c04 	andmi	r0, r2, r4, lsl #24
2000005c:	ffff0fff 			; <UNDEFINED> instruction: 0xffff0fff
20000060:	40020c0c 	andmi	r0, r2, ip, lsl #24
20000064:	ff00ffff 			; <UNDEFINED> instruction: 0xff00ffff

20000068 <keyb>:


unsigned char keyb( void ){
20000068:	b590      	push	{r4, r7, lr}
2000006a:	b087      	sub	sp, #28
2000006c:	af00      	add	r7, sp, #0
	int row, col;
	unsigned char key[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
2000006e:	003b      	movs	r3, r7
20000070:	4a16      	ldr	r2, [pc, #88]	; (200000cc <keyb+0x64>)
20000072:	ca13      	ldmia	r2!, {r0, r1, r4}
20000074:	c313      	stmia	r3!, {r0, r1, r4}
20000076:	6812      	ldr	r2, [r2, #0]
20000078:	601a      	str	r2, [r3, #0]
	for (row = 1; row <= 4; row++) {
2000007a:	2301      	movs	r3, #1
2000007c:	617b      	str	r3, [r7, #20]
2000007e:	e019      	b.n	200000b4 <keyb+0x4c>
		activateRow(row);
20000080:	697b      	ldr	r3, [r7, #20]
20000082:	0018      	movs	r0, r3
20000084:	f000 f86a 	bl	2000015c <activateRow>
		col = readColumn();
20000088:	f000 f83e 	bl	20000108 <readColumn>
2000008c:	0003      	movs	r3, r0
2000008e:	613b      	str	r3, [r7, #16]
		if ( col != 0 ){
20000090:	693b      	ldr	r3, [r7, #16]
20000092:	2b00      	cmp	r3, #0
20000094:	d00b      	beq.n	200000ae <keyb+0x46>
			activateRow( 0 );
20000096:	2000      	movs	r0, #0
20000098:	f000 f860 	bl	2000015c <activateRow>
			return key[4*(row-1) + (col-1)];
2000009c:	697b      	ldr	r3, [r7, #20]
2000009e:	3b01      	subs	r3, #1
200000a0:	009a      	lsls	r2, r3, #2
200000a2:	693b      	ldr	r3, [r7, #16]
200000a4:	3b01      	subs	r3, #1
200000a6:	18d3      	adds	r3, r2, r3
200000a8:	003a      	movs	r2, r7
200000aa:	5cd3      	ldrb	r3, [r2, r3]
200000ac:	e009      	b.n	200000c2 <keyb+0x5a>
	for (row = 1; row <= 4; row++) {
200000ae:	697b      	ldr	r3, [r7, #20]
200000b0:	3301      	adds	r3, #1
200000b2:	617b      	str	r3, [r7, #20]
200000b4:	697b      	ldr	r3, [r7, #20]
200000b6:	2b04      	cmp	r3, #4
200000b8:	dde2      	ble.n	20000080 <keyb+0x18>
		}
	}
	activateRow( 0 );
200000ba:	2000      	movs	r0, #0
200000bc:	f000 f84e 	bl	2000015c <activateRow>
	return 0xFF;
200000c0:	23ff      	movs	r3, #255	; 0xff
}
200000c2:	0018      	movs	r0, r3
200000c4:	46bd      	mov	sp, r7
200000c6:	b007      	add	sp, #28
200000c8:	bd90      	pop	{r4, r7, pc}
200000ca:	46c0      	nop			; (mov r8, r8)
200000cc:	200001cc 	andcs	r0, r0, ip, asr #3

200000d0 <out7seg>:

void out7seg( unsigned char c){
200000d0:	b5b0      	push	{r4, r5, r7, lr}
200000d2:	b086      	sub	sp, #24
200000d4:	af00      	add	r7, sp, #0
200000d6:	0002      	movs	r2, r0
200000d8:	1dfb      	adds	r3, r7, #7
200000da:	701a      	strb	r2, [r3, #0]
	unsigned char nums[] = {0x3F, 0x06,0x5B,0x4F,0x66,0x5D,0x7D,0x7,0x7F,0x67,
200000dc:	2008      	movs	r0, #8
200000de:	183b      	adds	r3, r7, r0
200000e0:	4a07      	ldr	r2, [pc, #28]	; (20000100 <out7seg+0x30>)
200000e2:	ca32      	ldmia	r2!, {r1, r4, r5}
200000e4:	c332      	stmia	r3!, {r1, r4, r5}
200000e6:	6812      	ldr	r2, [r2, #0]
200000e8:	601a      	str	r2, [r3, #0]
							0x77,0x7C,0x39,0x57,0x79,0x71};
	if(0 <= c < 0x10){
		*((unsigned char *) 0x40020C14) = nums[c];
200000ea:	1dfb      	adds	r3, r7, #7
200000ec:	781b      	ldrb	r3, [r3, #0]
200000ee:	4905      	ldr	r1, [pc, #20]	; (20000104 <out7seg+0x34>)
200000f0:	183a      	adds	r2, r7, r0
200000f2:	5cd3      	ldrb	r3, [r2, r3]
200000f4:	700b      	strb	r3, [r1, #0]
	}
	else{
		*((unsigned char *) 0x40020C14) = 0x0;
	}
}
200000f6:	46c0      	nop			; (mov r8, r8)
200000f8:	46bd      	mov	sp, r7
200000fa:	b006      	add	sp, #24
200000fc:	bdb0      	pop	{r4, r5, r7, pc}
200000fe:	46c0      	nop			; (mov r8, r8)
20000100:	200001dc 	ldrdcs	r0, [r0], -ip
20000104:	40020c14 	andmi	r0, r2, r4, lsl ip

20000108 <readColumn>:
	

int readColumn ( void ){
20000108:	b580      	push	{r7, lr}
2000010a:	b082      	sub	sp, #8
2000010c:	af00      	add	r7, sp, #0
	unsigned char c;
	c = *((volatile unsigned char *) 0x40020C11);
2000010e:	4a12      	ldr	r2, [pc, #72]	; (20000158 <readColumn+0x50>)
20000110:	1dfb      	adds	r3, r7, #7
20000112:	7812      	ldrb	r2, [r2, #0]
20000114:	701a      	strb	r2, [r3, #0]
	if(c & 0x8) return 4;
20000116:	1dfb      	adds	r3, r7, #7
20000118:	781b      	ldrb	r3, [r3, #0]
2000011a:	2208      	movs	r2, #8
2000011c:	4013      	ands	r3, r2
2000011e:	d001      	beq.n	20000124 <readColumn+0x1c>
20000120:	2304      	movs	r3, #4
20000122:	e015      	b.n	20000150 <readColumn+0x48>
	if(c & 0x4) return 3;
20000124:	1dfb      	adds	r3, r7, #7
20000126:	781b      	ldrb	r3, [r3, #0]
20000128:	2204      	movs	r2, #4
2000012a:	4013      	ands	r3, r2
2000012c:	d001      	beq.n	20000132 <readColumn+0x2a>
2000012e:	2303      	movs	r3, #3
20000130:	e00e      	b.n	20000150 <readColumn+0x48>
	if(c & 0x2) return 2;
20000132:	1dfb      	adds	r3, r7, #7
20000134:	781b      	ldrb	r3, [r3, #0]
20000136:	2202      	movs	r2, #2
20000138:	4013      	ands	r3, r2
2000013a:	d001      	beq.n	20000140 <readColumn+0x38>
2000013c:	2302      	movs	r3, #2
2000013e:	e007      	b.n	20000150 <readColumn+0x48>
	if(c & 0x1) return 1;
20000140:	1dfb      	adds	r3, r7, #7
20000142:	781b      	ldrb	r3, [r3, #0]
20000144:	2201      	movs	r2, #1
20000146:	4013      	ands	r3, r2
20000148:	d001      	beq.n	2000014e <readColumn+0x46>
2000014a:	2301      	movs	r3, #1
2000014c:	e000      	b.n	20000150 <readColumn+0x48>
	return 0;
2000014e:	2300      	movs	r3, #0
}
20000150:	0018      	movs	r0, r3
20000152:	46bd      	mov	sp, r7
20000154:	b002      	add	sp, #8
20000156:	bd80      	pop	{r7, pc}
20000158:	40020c11 	andmi	r0, r2, r1, lsl ip

2000015c <activateRow>:

void activateRow( unsigned int row ){
2000015c:	b580      	push	{r7, lr}
2000015e:	b084      	sub	sp, #16
20000160:	af00      	add	r7, sp, #0
20000162:	6078      	str	r0, [r7, #4]
	//GPIO_ODR
	volatile unsigned char * GPIO_ODR_HIGH =  ((volatile unsigned char * ) 0x40020C15);
20000164:	4b11      	ldr	r3, [pc, #68]	; (200001ac <activateRow+0x50>)
20000166:	60fb      	str	r3, [r7, #12]
	
	switch( row ){
20000168:	687b      	ldr	r3, [r7, #4]
2000016a:	2b04      	cmp	r3, #4
2000016c:	d819      	bhi.n	200001a2 <activateRow+0x46>
2000016e:	687b      	ldr	r3, [r7, #4]
20000170:	009a      	lsls	r2, r3, #2
20000172:	4b0f      	ldr	r3, [pc, #60]	; (200001b0 <activateRow+0x54>)
20000174:	18d3      	adds	r3, r2, r3
20000176:	681b      	ldr	r3, [r3, #0]
20000178:	469f      	mov	pc, r3
		case 1: *GPIO_ODR_HIGH = 0x10; break;
2000017a:	68fb      	ldr	r3, [r7, #12]
2000017c:	2210      	movs	r2, #16
2000017e:	701a      	strb	r2, [r3, #0]
20000180:	e00f      	b.n	200001a2 <activateRow+0x46>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
20000182:	68fb      	ldr	r3, [r7, #12]
20000184:	2220      	movs	r2, #32
20000186:	701a      	strb	r2, [r3, #0]
20000188:	e00b      	b.n	200001a2 <activateRow+0x46>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
2000018a:	68fb      	ldr	r3, [r7, #12]
2000018c:	2240      	movs	r2, #64	; 0x40
2000018e:	701a      	strb	r2, [r3, #0]
20000190:	e007      	b.n	200001a2 <activateRow+0x46>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
20000192:	68fb      	ldr	r3, [r7, #12]
20000194:	2280      	movs	r2, #128	; 0x80
20000196:	701a      	strb	r2, [r3, #0]
20000198:	e003      	b.n	200001a2 <activateRow+0x46>
		case 0: *GPIO_ODR_HIGH = 0x00; break;
2000019a:	68fb      	ldr	r3, [r7, #12]
2000019c:	2200      	movs	r2, #0
2000019e:	701a      	strb	r2, [r3, #0]
200001a0:	46c0      	nop			; (mov r8, r8)
	}
}
200001a2:	46c0      	nop			; (mov r8, r8)
200001a4:	46bd      	mov	sp, r7
200001a6:	b004      	add	sp, #16
200001a8:	bd80      	pop	{r7, pc}
200001aa:	46c0      	nop			; (mov r8, r8)
200001ac:	40020c15 	andmi	r0, r2, r5, lsl ip
200001b0:	200001ec 	andcs	r0, r0, ip, ror #3

200001b4 <main>:

void main(void)
{
200001b4:	b580      	push	{r7, lr}
200001b6:	af00      	add	r7, sp, #0
	app_init();
200001b8:	f7ff ff2a 	bl	20000010 <app_init>
	while(1){
		out7seg( keyb() );
200001bc:	f7ff ff54 	bl	20000068 <keyb>
200001c0:	0003      	movs	r3, r0
200001c2:	0018      	movs	r0, r3
200001c4:	f7ff ff84 	bl	200000d0 <out7seg>
200001c8:	e7f8      	b.n	200001bc <main+0x8>
200001ca:	46c0      	nop			; (mov r8, r8)
200001cc:	0a030201 	beq	200c09d8 <main+0xc0824>
200001d0:	0b060504 	bleq	201815e8 <main+0x181434>
200001d4:	0c090807 	stceq	8, cr0, [r9], {7}
200001d8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001a8 <activateRow+0x4c>
200001dc:	4f5b063f 	svcmi	0x005b063f
200001e0:	077d5d66 	ldrbeq	r5, [sp, -r6, ror #26]!
200001e4:	7c77677f 	ldclvc	7, cr6, [r7], #-508	; 0xfffffe04
200001e8:	71795739 	cmnvc	r9, r9, lsr r7
200001ec:	2000019a 	mulcs	r0, sl, r1
200001f0:	2000017a 	andcs	r0, r0, sl, ror r1
200001f4:	20000182 	andcs	r0, r0, r2, lsl #3
200001f8:	2000018a 	andcs	r0, r0, sl, lsl #3
200001fc:	20000192 	mulcs	r0, r2, r1

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000018a 	andeq	r0, r0, sl, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000076 	andeq	r0, r0, r6, ror r0
  10:	0001360c 	andeq	r3, r1, ip, lsl #12
  14:	00002a00 	andeq	r2, r0, r0, lsl #20
	...
  24:	010e0200 	mrseq	r0, LR_fiq
  28:	4f010000 	svcmi	0x00010000
  2c:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
  30:	00000016 	andeq	r0, r0, r6, lsl r0
  34:	21039c01 	tstcs	r3, r1, lsl #24
  38:	01000001 	tsteq	r0, r1
  3c:	00015c42 	andeq	r5, r1, r2, asr #24
  40:	00005820 	andeq	r5, r0, r0, lsr #16
  44:	689c0100 	ldmvs	ip, {r8}
  48:	04000000 	streq	r0, [r0], #-0
  4c:	00776f72 	rsbseq	r6, r7, r2, ror pc
  50:	00684201 	rsbeq	r4, r8, r1, lsl #4
  54:	91020000 	mrsls	r0, (UNDEF: 2)
  58:	0113056c 	tsteq	r3, ip, ror #10
  5c:	44010000 	strmi	r0, [r1], #-0
  60:	0000006f 	andeq	r0, r0, pc, rrx
  64:	00749102 	rsbseq	r9, r4, r2, lsl #2
  68:	05070406 	streq	r0, [r7, #-1030]	; 0xfffffbfa
  6c:	07000000 	streq	r0, [r0, -r0]
  70:	00007c04 	andeq	r7, r0, r4, lsl #24
  74:	08010600 	stmdaeq	r1, {r9, sl}
  78:	00000068 	andeq	r0, r0, r8, rrx
  7c:	00007508 	andeq	r7, r0, r8, lsl #10
  80:	00170900 	andseq	r0, r7, r0, lsl #18
  84:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
  88:	000000a7 	andeq	r0, r0, r7, lsr #1
  8c:	20000108 	andcs	r0, r0, r8, lsl #2
  90:	00000054 	andeq	r0, r0, r4, asr r0
  94:	00a79c01 	adceq	r9, r7, r1, lsl #24
  98:	630a0000 	movwvs	r0, #40960	; 0xa000
  9c:	75390100 	ldrvc	r0, [r9, #-256]!	; 0xffffff00
  a0:	02000000 	andeq	r0, r0, #0
  a4:	0b007791 	bleq	1def0 <startup-0x1ffe2110>
  a8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  ac:	22030074 	andcs	r0, r3, #116	; 0x74
  b0:	01000000 	mrseq	r0, (UNDEF: 0)
  b4:	0000d02c 	andeq	sp, r0, ip, lsr #32
  b8:	00003820 	andeq	r3, r0, r0, lsr #16
  bc:	de9c0100 	fmllee	f0, f4, f0
  c0:	04000000 	streq	r0, [r0], #-0
  c4:	2c010063 	stccs	0, cr0, [r1], {99}	; 0x63
  c8:	00000075 	andeq	r0, r0, r5, ror r0
  cc:	055f9102 	ldrbeq	r9, [pc, #-258]	; ffffffd2 <main+0xdffffe1e>
  d0:	00000000 	andeq	r0, r0, r0
  d4:	00de2d01 	sbcseq	r2, lr, r1, lsl #26
  d8:	91020000 	mrsls	r0, (UNDEF: 2)
  dc:	750c0060 	strvc	r0, [ip, #-96]	; 0xffffffa0
  e0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
  e4:	0d000000 	stceq	0, cr0, [r0, #-0]
  e8:	00000068 	andeq	r0, r0, r8, rrx
  ec:	120e000f 	andne	r0, lr, #15
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	0000751d 	andeq	r7, r0, sp, lsl r5
  f8:	00006800 	andeq	r6, r0, r0, lsl #16
  fc:	00006820 	andeq	r6, r0, r0, lsr #16
 100:	6b9c0100 	blvs	fe700508 <main+0xde700354>
 104:	0a000001 	beq	110 <startup-0x1ffffef0>
 108:	00776f72 	rsbseq	r6, r7, r2, ror pc
 10c:	00a71e01 	adceq	r1, r7, r1, lsl #28
 110:	91020000 	mrsls	r0, (UNDEF: 2)
 114:	6f630a6c 	svcvs	0x00630a6c
 118:	1e01006c 	cdpne	0, 0, cr0, cr1, cr12, {3}
 11c:	000000a7 	andeq	r0, r0, r7, lsr #1
 120:	0a689102 	beq	1a24530 <startup-0x1e5dbad0>
 124:	0079656b 	rsbseq	r6, r9, fp, ror #10
 128:	00de1f01 	sbcseq	r1, lr, r1, lsl #30
 12c:	91020000 	mrsls	r0, (UNDEF: 2)
 130:	01210f58 			; <UNDEFINED> instruction: 0x01210f58
 134:	21010000 	mrscs	r0, (UNDEF: 1)
 138:	000000a7 	andeq	r0, r0, r7, lsr #1
 13c:	00000142 	andeq	r0, r0, r2, asr #2
 140:	80110010 	andshi	r0, r1, r0, lsl r0
 144:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 148:	0f000000 	svceq	0x00000000
 14c:	00000121 	andeq	r0, r0, r1, lsr #2
 150:	00a72101 	adceq	r2, r7, r1, lsl #2
 154:	015c0000 	cmpeq	ip, r0
 158:	00100000 	andseq	r0, r0, r0
 15c:	00001712 	andeq	r1, r0, r2, lsl r7
 160:	a7220100 	strge	r0, [r2, -r0, lsl #2]!
 164:	10000000 	andne	r0, r0, r0
 168:	13000000 	movwne	r0, #0
 16c:	0000012d 	andeq	r0, r0, sp, lsr #2
 170:	00101101 	andseq	r1, r0, r1, lsl #2
 174:	00582000 	subseq	r2, r8, r0
 178:	9c010000 	stcls	0, cr0, [r1], {-0}
 17c:	00006013 	andeq	r6, r0, r3, lsl r0
 180:	00070100 	andeq	r0, r7, r0, lsl #2
 184:	0c200000 	stceq	0, cr0, [r0], #-0
 188:	01000000 	mrseq	r0, (UNDEF: 0)
 18c:	Address 0x0000018c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	03000019 	movweq	r0, #25
  2c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  30:	0b3a0e03 	bleq	e83844 <startup-0x1f17c7bc>
  34:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  38:	06120111 			; <UNDEFINED> instruction: 0x06120111
  3c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  40:	00130119 	andseq	r0, r3, r9, lsl r1
  44:	00050400 	andeq	r0, r5, r0, lsl #8
  48:	0b3a0803 	bleq	e8205c <startup-0x1f17dfa4>
  4c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  50:	00001802 	andeq	r1, r0, r2, lsl #16
  54:	03003405 	movweq	r3, #1029	; 0x405
  58:	3b0b3a0e 	blcc	2ce898 <startup-0x1fd31768>
  5c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  60:	06000018 			; <UNDEFINED> instruction: 0x06000018
  64:	0b0b0024 	bleq	2c00fc <startup-0x1fd3ff04>
  68:	0e030b3e 	vmoveq.16	d3[0], r0
  6c:	0f070000 	svceq	0x00070000
  70:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  74:	08000013 	stmdaeq	r0, {r0, r1, r4}
  78:	13490035 	movtne	r0, #36917	; 0x9035
  7c:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
  80:	03193f01 	tsteq	r9, #1, 30
  84:	3b0b3a0e 	blcc	2ce8c4 <startup-0x1fd3173c>
  88:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  8c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  90:	97184006 	ldrls	r4, [r8, -r6]
  94:	13011942 	movwne	r1, #6466	; 0x1942
  98:	340a0000 	strcc	r0, [sl], #-0
  9c:	3a080300 	bcc	200ca4 <startup-0x1fdff35c>
  a0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  a4:	00180213 	andseq	r0, r8, r3, lsl r2
  a8:	00240b00 	eoreq	r0, r4, r0, lsl #22
  ac:	0b3e0b0b 	bleq	f82ce0 <startup-0x1f07d320>
  b0:	00000803 	andeq	r0, r0, r3, lsl #16
  b4:	4901010c 	stmdbmi	r1, {r2, r3, r8}
  b8:	00130113 	andseq	r0, r3, r3, lsl r1
  bc:	00210d00 	eoreq	r0, r1, r0, lsl #26
  c0:	0b2f1349 	bleq	bc4dec <startup-0x1f43b214>
  c4:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
  c8:	03193f01 	tsteq	r9, #1, 30
  cc:	3b0b3a0e 	blcc	2ce90c <startup-0x1fd316f4>
  d0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  d8:	96184006 	ldrls	r4, [r8], -r6
  dc:	13011942 	movwne	r1, #6466	; 0x1942
  e0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
  e4:	03193f01 	tsteq	r9, #1, 30
  e8:	3b0b3a0e 	blcc	2ce928 <startup-0x1fd316d8>
  ec:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
  f0:	00130119 	andseq	r0, r3, r9, lsl r1
  f4:	00181000 	andseq	r1, r8, r0
  f8:	0b110000 	bleq	440100 <startup-0x1fbbff00>
  fc:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 100:	12000006 	andne	r0, r0, #6
 104:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 108:	0b3a0e03 	bleq	e8391c <startup-0x1f17c6e4>
 10c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 110:	0000193c 	andeq	r1, r0, ip, lsr r9
 114:	3f002e13 	svccc	0x00002e13
 118:	3a0e0319 	bcc	380d84 <startup-0x1fc7f27c>
 11c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 120:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 124:	97184006 	ldrls	r4, [r8, -r6]
 128:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001ca 	andcs	r0, r0, sl, asr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d3 	ldrdeq	r0, [r0], -r3
   4:	00560002 	subseq	r0, r6, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c695f66 	stclvs	15, cr5, [r9], #-408	; 0xfffffe68
  28:	6e4f2f6c 	cdpvs	15, 4, cr2, cr15, cr12, {3}
  2c:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
  30:	442f6576 	strtmi	r6, [pc], #-1398	; 38 <startup-0x1fffffc8>
  34:	6d756b6f 	fldmdbxvs	r5!, {d22-d76}	;@ Deprecated
  38:	2f746e65 	svccs	0x00746e65
  3c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
  40:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  44:	6f697461 	svcvs	0x00697461
  48:	2f72656e 	svccs	0x0072656e
  4c:	3470616b 	ldrbtcc	r6, [r0], #-363	; 0xfffffe95
  50:	74730000 	ldrbtvc	r0, [r3], #-0
  54:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  58:	00632e70 	rsbeq	r2, r3, r0, ror lr
  5c:	00000001 	andeq	r0, r0, r1
  60:	00020500 	andeq	r0, r2, r0, lsl #10
  64:	19200000 	stmdbne	r0!, {}	; <UNPREDICTABLE>
  68:	03025e13 	movweq	r5, #11795	; 0x2e13
  6c:	00010100 	andeq	r0, r1, r0, lsl #2
  70:	00100205 	andseq	r0, r0, r5, lsl #4
  74:	10032000 	andne	r2, r3, r0
  78:	673e3001 	ldrvs	r3, [lr, -r1]!
  7c:	f575674c 			; <UNDEFINED> instruction: 0xf575674c
  80:	4b3d673e 	blmi	f59d80 <startup-0x1f0a6280>
  84:	003d3d4b 	eorseq	r3, sp, fp, asr #26
  88:	8b020402 	blhi	81098 <startup-0x1ff7ef68>
  8c:	01040200 	mrseq	r0, R12_usr
  90:	44063c06 	strmi	r3, [r6], #-3078	; 0xfffff3fa
  94:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  98:	67762101 	ldrbvs	r2, [r6, -r1, lsl #2]!
  9c:	3e936b77 	vmovcc.u16	r6, d3[1]
  a0:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
  a4:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
  a8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  ac:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
  b0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  b4:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
  b8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  bc:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
  c0:	4c68212f 	stfmie	f2, [r8], #-188	; 0xffffff44
  c4:	4b4b9130 	blmi	12e458c <startup-0x1ed1ba74>
  c8:	934c4b4b 	movtls	r4, #52043	; 0xcb4b
  cc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  d0:	07023001 	streq	r3, [r2, -r1]
  d4:	Address 0x000000d4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	736d756e 	cmnvc	sp, #461373440	; 0x1b800000
   4:	736e7500 	cmnvc	lr, #0, 10
   8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
   c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  10:	656b0074 	strbvs	r0, [fp, #-116]!	; 0xffffff8c
  14:	72006279 	andvc	r6, r0, #-1879048185	; 0x90000007
  18:	43646165 	cmnmi	r4, #1073741849	; 0x40000019
  1c:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	; 0xfffffe44
  20:	756f006e 	strbvc	r0, [pc, #-110]!	; ffffffba <main+0xdffffe06>
  24:	65733774 	ldrbvs	r3, [r3, #-1908]!	; 0xfffff88c
  28:	3a430067 	bcc	10c01cc <startup-0x1ef3fe34>
  2c:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
  30:	665c7372 			; <UNDEFINED> instruction: 0x665c7372
  34:	6c6c695f 			; <UNDEFINED> instruction: 0x6c6c695f
  38:	656e4f5c 	strbvs	r4, [lr, #-3932]!	; 0xfffff0a4
  3c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
  40:	6f445c65 	svcvs	0x00445c65
  44:	656d756b 	strbvs	r7, [sp, #-1387]!	; 0xfffffa95
  48:	4d5c746e 	cfldrdmi	mvd7, [ip, #-440]	; 0xfffffe48
  4c:	616c706f 	cmnvs	ip, pc, rrx
  50:	61726f62 	cmnvs	r2, r2, ror #30
  54:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  58:	6b5c7265 	blvs	171c9f4 <startup-0x1e8e360c>
  5c:	00347061 	eorseq	r7, r4, r1, rrx
  60:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  64:	00707574 	rsbseq	r7, r0, r4, ror r5
  68:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  6c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  70:	61686320 	cmnvs	r8, r0, lsr #6
  74:	4e470072 	mcrmi	0, 2, r0, cr7, cr2, {3}
  78:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  7c:	2e372039 	mrccs	0, 1, r2, cr7, cr9, {1}
  80:	20312e32 	eorscs	r2, r1, r2, lsr lr
  84:	37313032 			; <UNDEFINED> instruction: 0x37313032
  88:	34303930 	ldrtcc	r3, [r0], #-2352	; 0xfffff6d0
  8c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  90:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  94:	5b202965 	blpl	80a630 <startup-0x1f7f59d0>
  98:	2f4d5241 	svccs	0x004d5241
  9c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  a0:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  a4:	622d372d 	eorvs	r3, sp, #11796480	; 0xb40000
  a8:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  ac:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  b0:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  b4:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  b8:	30323535 	eorscc	r3, r2, r5, lsr r5
  bc:	2d205d34 	stccs	13, cr5, [r0, #-208]!	; 0xffffff30
  c0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  c4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  c8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  cc:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  d0:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  d4:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  d8:	616f6c66 	cmnvs	pc, r6, ror #24
  dc:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  e0:	6f733d69 	svcvs	0x00733d69
  e4:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  e8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  ec:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  f0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  f4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  f8:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  fc:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 100:	304f2d20 	subcc	r2, pc, r0, lsr #26
 104:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 108:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 10c:	616d0039 	cmnvs	sp, r9, lsr r0
 110:	47006e69 	strmi	r6, [r0, -r9, ror #28]
 114:	5f4f4950 	svcpl	0x004f4950
 118:	5f52444f 	svcpl	0x0052444f
 11c:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
 120:	74636100 	strbtvc	r6, [r3], #-256	; 0xffffff00
 124:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 128:	776f5265 	strbvc	r5, [pc, -r5, ror #4]!
 12c:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 130:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 134:	3a430074 	bcc	10c030c <startup-0x1ef3fcf4>
 138:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 13c:	662f7372 			; <UNDEFINED> instruction: 0x662f7372
 140:	6c6c695f 			; <UNDEFINED> instruction: 0x6c6c695f
 144:	656e4f2f 	strbvs	r4, [lr, #-3887]!	; 0xfffff0d1
 148:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 14c:	6f442f65 	svcvs	0x00442f65
 150:	656d756b 	strbvs	r7, [sp, #-1387]!	; 0xfffffa95
 154:	4d2f746e 	cfstrsmi	mvf7, [pc, #-440]!	; ffffffa4 <main+0xdffffdf0>
 158:	616c706f 	cmnvs	ip, pc, rrx
 15c:	61726f62 	cmnvs	r2, r2, ror #30
 160:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 164:	6b2f7265 	blvs	bdcb00 <startup-0x1f423500>
 168:	2f347061 	svccs	0x00347061
 16c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 170:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
 174:	Address 0x00000174 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <main+0xdffff15a>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000058 	andeq	r0, r0, r8, asr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000020 	andeq	r0, r0, r0, lsr #32
  40:	00000000 	andeq	r0, r0, r0
  44:	20000068 	andcs	r0, r0, r8, rrx
  48:	00000068 	andeq	r0, r0, r8, rrx
  4c:	400c0e41 	andmi	r0, ip, r1, asr #28
  50:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  54:	018e4002 	orreq	r4, lr, r2
  58:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  5c:	0000070d 	andeq	r0, r0, sp, lsl #14
  60:	00000024 	andeq	r0, r0, r4, lsr #32
  64:	00000000 	andeq	r0, r0, r0
  68:	200000d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  6c:	00000038 	andeq	r0, r0, r8, lsr r0
  70:	40100e41 	andsmi	r0, r0, r1, asr #28
  74:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
  78:	02874003 	addeq	r4, r7, #3
  7c:	41018e40 	tstmi	r1, r0, asr #28
  80:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
  84:	00000007 	andeq	r0, r0, r7
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	20000108 	andcs	r0, r0, r8, lsl #2
  94:	00000054 	andeq	r0, r0, r4, asr r0
  98:	40080e41 	andmi	r0, r8, r1, asr #28
  9c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  a0:	100e4101 	andne	r4, lr, r1, lsl #2
  a4:	00070d41 	andeq	r0, r7, r1, asr #26
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	2000015c 	andcs	r0, r0, ip, asr r1
  b4:	00000058 	andeq	r0, r0, r8, asr r0
  b8:	40080e41 	andmi	r0, r8, r1, asr #28
  bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  c0:	180e4101 	stmdane	lr, {r0, r8, lr}
  c4:	00070d41 	andeq	r0, r7, r1, asr #26
  c8:	00000018 	andeq	r0, r0, r8, lsl r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
  d4:	00000016 	andeq	r0, r0, r6, lsl r0
  d8:	40080e41 	andmi	r0, r8, r1, asr #28
  dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
